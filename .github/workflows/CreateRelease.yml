name: Release Artifacts

on: 
  push:
    paths-ignore:
      - '.github/workflows/**'
    branches:
      - master

# ToDo add build step for nodejs / vue frontend
jobs:
  build_wheel:
    name: Build Linux wheel
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2     
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install requirements
        run: |
          pip install wheel
          pip install pyinstaller
          pip install -r requirements.txt
      - name: Compile Linux wheel
        run: |
          python setup.py sdist bdist_wheel
      - name: Upload Linux wheel
        uses: actions/upload-artifact@v2
        with:
          name: artifact-wheel
          path: ./dist/*
          
  build_exe:
    name: Build Windows Exe
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install requirements
        run: |
          pip install wheel
          pip install pyinstaller
          pip install -r requirements.txt
      - name: Compile Windows Exe
        run: |
          $version = python feedcrawler/version.py
          pyinstaller --onefile -y -i "feedcrawler/web/img/favicon.ico" --version-file "file_version_info.txt" --hidden-import "_rapidfuzz_cpp" --add-data "feedcrawler/web;web" "FeedCrawler.py" -n "feedcrawler-$version-standalone-win64"
      - name: Upload Windows Exe
        uses: actions/upload-artifact@v2
        with:
          name: artifact-exe
          path: ./dist/*.exe

  release:
    name: Release Artifacts
    runs-on: ubuntu-latest
    needs: [build_wheel, build_exe]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install requirements
        run: |
          pip install twine beautifulsoup4>=4.9.3
      - name: Get Version
        run: echo "::set-output name=version::$(python feedcrawler/version.py)"
        id: version
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: v.${{ steps.version.outputs.version }}
          tag_name: v.${{ steps.version.outputs.version }}
          body_path: .github/Changelog.md
      - name: Upload Linux Wheel
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifact-wheel/feedcrawler-${{ steps.version.outputs.version }}-py3-none-any.whl
          asset_name: feedcrawler-${{ steps.version.outputs.version }}-py3-none-any.whl
          asset_content_type: application/octet-stream
      - name: Upload Windows Exe
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifact-exe/feedcrawler-${{ steps.version.outputs.version }}-standalone-win64.exe
          asset_name: feedcrawler-${{ steps.version.outputs.version }}-standalone-win64.exe
          asset_content_type: application/octet-stream
      - name: Upload to PyPI
        run: |
          python -m twine upload ./artifact-wheel/* -u __token__ -p ${{ secrets.PYPI_TOKEN }}
      - name: Trigger Docker Image build
        run: |
          curl -XPOST -u "${{ secrets.CR_USER }}:${{secrets.CR_PAT}}" -H "Accept: application/vnd.github.v3+json" -H "Content-Type: application/json" https://api.github.com/repos/rix1337/docker-feedcrawler/actions/workflows/BuildImage.yml/dispatches --data '{"ref": "master", "inputs": {"version": "${{ steps.version.outputs.version }}"}"}'
