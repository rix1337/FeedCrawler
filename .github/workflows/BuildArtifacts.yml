name: Trigger builds

on: [push]

jobs:
  build_wheel:
    name: Build Linux wheel
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2     
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install requirements
        run: |
          pip install wheel
          pip install pyinstaller
          pip install git+https://github.com/alberanid/imdbpy
          pip install -r requirements.txt
      - name: Compile Linux wheel
        run: |
          python setup.py sdist bdist_wheel
      - name: Upload Linux wheel
        uses: actions/upload-artifact@v2
        with:
          name: artifact-wheel
          path: ./dist/*.whl
          
  build_exe:
    name: Build Windows Exe
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install requirements
        run: |
          pip install wheel
          pip install pyinstaller
          pip install git+https://github.com/alberanid/imdbpy
          pip install -r requirements.txt
      - name: Compile Windows Exe
        run: |
          $version = python feedcrawler/version.py
          pyinstaller --onefile -y -i "feedcrawler/web/img/favicon.ico" --version-file "file_version_info.txt" --hidden-import "_rapidfuzz_cpp" --add-data "feedcrawler/web;web" "FeedCrawler.py" -n "feedcrawler-$version-standalone-win64"
      - name: Upload Windows Exe
        uses: actions/upload-artifact@v2
        with:
          name: artifact-exe
          path: ./dist/*.exe

  upload:
    name: Release artifacts
    runs-on: ubuntu-latest
    needs: [build_wheel, build_exe]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install requirements
        run: |
          pip install twine
      - name: version
        run: echo "::set-output name=version::v.$(./python feedcrawler/version.py)"
        id: version
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ steps.version.outputs.version }}
      - name: Display structure of downloaded files
        run: ls -R


